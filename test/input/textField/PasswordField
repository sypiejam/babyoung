import { useTranslation } from "react-i18next";

/**
 * @name PasswordField 
 * @role input Password 단일 컴포넌트
 * @props status(string) - disabled(비활성화), readOnly(읽기만 가능 할 경우), error 상태일 경우
 * @props title(string) - input 속성인 title에 사용되는 문구
 * @props defaultValue(string) - value 값이 존재할 경우 사용
 * @props subText(string) - '4자'와 같이 입력개수를 표기해줄 경우 사용
 * @props itemNum(number) - 비밀번호 입력 숫자가 4자리가 아닐경우 나타나야 하는 점(item)의 개수 // 2023-06-20 itemNum 추가
 **/ 

function PasswordField({ status, defaultValue, title, subText , itemNum }) { // 2023-06-20 itemNum 추가
    const {t} = useTranslation();
    const classNames = [
        "inp_field pw_field",
        (status==="error") ? ` is-error` : "",
    ].join("");

    return  ( 
        <div className={classNames}>
            <div className="inp_password">
                <div className="inp_item">
                    <input type="password" className="inp_text" title={title} inputMode="none" defaultValue={defaultValue} placeholder="" readOnly />
                    { subText &&
                        <span className="inp_word">{subText}</span>
                    }
                </div>
                <div className="inp_pwshadow">{/* <!-- 모두 입력 완료 상태 filled 추가 --> */}
                {/* 2023-06-20 수정 S */}
                   { itemNum ? Items(itemNum) :
                        <>
                            <i className="item"></i>  {/*<!-- 입력된 상태 on 추가 --> */}
                            <i className="item"></i>
                            <i className="item"></i>
                            <i className="item"></i>
                        </>
                    }
                {/* 2023-06-20 수정 E */}
                </div>
            </div>
        </div>
    )
}

function Items(itemNum){ //2023-06-20 함수 추가
    let items = [];
    for(let i=0;i<Number(itemNum);i++){
        items.push(<i className="item" key={i}></i>);
    }
    return items;
}
export default PasswordField;
