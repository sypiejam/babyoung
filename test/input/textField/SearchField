/**
 * 
 * @name SearchField
 * @role SearchField 컴포넌트입니다.
 * @props boxtype(string) - 박스형일 경우 searchbox 추가합니다.
 * @props title(string) - 타이틀 내용입력시 title, placeholder 동일한 값이 추가됩니다.
 * @props defaultValue - value <!-- 2023-05-17 props 수정 -->
 * @props disabled(boolean) - 비활성화시 disabled 추가합니다.
 * @props icoText - hidden text 추가합니다. (ex. icoText="영업점 검색")
 * 
 */ 

function SearchField({ boxtype, title, defaultValue, disabled, icoText, placeholder, readOnly, callback }) { //2023-06-20 placeholder, readOnly, callback props 추가 // 2023-05-24 children, isvalid 삭제
    const classNames = [ //2023-06-20 classNames 변경
        "inp_field sch_field",
        boxtype ? ` searchbox` : "",
        disabled ? ` disabled` : "",
        readOnly ? ` filled` : "", 
    ].join("");

    return (
        <>
            <div className={classNames} boxtype={boxtype}> {/* <!-- 비활성화 클래스 disabled 추가 --> */} {/* <!-- 2023-05-24 children, isvalid 삭제 --> */}
                <input type="search" defaultValue={defaultValue} className="inp_text inp_search" title={title} placeholder={!placeholder ? title : placeholder} disabled={disabled} readOnly={readOnly} /> {/* <!-- 2023-05-17 props 수정 --> */} {/* <!-- 2023-06-20 placeholder, readOnly 추가 --> */}
                {boxtype === "searchbox" && <div className="border"></div>}
                <div className="field_item">
                    <button type="button" className="ico_search inp_button" onClick={callback}><span className="blind">{icoText}</span></button> {/* <!-- 2023-06-20 onClick 추가 --> */}
                </div>
            </div>
        </>
    );
}

export default SearchField;
